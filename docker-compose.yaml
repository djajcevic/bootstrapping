services:
  init:
    image: &tempoImage grafana/tempo:2.6.0
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo-data:/var/tempo

#  dotnet:
#    image: myapp
#    entrypoint: "./out/MyApi --urls http://*:5000"
#    env_file:
#      - otel-dotnet.env
#    environment:
#      OTEL_LOG_LEVEL: debug
#      OTEL_SERVICE_NAME: "myapp-dotnet"
#      OTEL_EXPORTER_OTLP_ENDPOINT: "http://localhost:9317"
#      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "MyApp"
#      OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES: "MyApp"
#      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
#      OTEL_TRACES_EXPORTER: otlp
#      OTEL_SPAN_EXPORTER: otlp
#      OTEL_METRICS_EXPORTER: otlp
#    network_mode: host

#  backend:
#    image: spring-demo
#    ports:
#      - 8080:8080
#    environment:
#      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:9317
#      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
##      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: http://otel-collector:4318/v1/logs
##      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://prometheus:9090/api/v1/write
##      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://tempo:4317
#      OTEL_SERVICE_NAME: backend
#      OTEL_JAVAAGENT_DEBUG: false
#      OTEL_TRACES_EXPORTER: otlp
#      OTEL_SPAN_EXPORTER: otlp
#      OTEL_METRICS_EXPORTER: otlp
#    network_mode: host
#    networks:
#      - app

#
#  k6-tracing:
#    image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
#    environment:
#      - ENDPOINT=otel-collector:4317
#    restart: always
##    depends_on:
##      - otel-collector
#    networks:
#      - observability
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./otel/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - grafana-data:/var/lib/grafana
      - ./otel/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    depends_on:
      - tempo
    networks:
      - observability

  tempo:
    image: *tempoImage
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    volumes:
      - tempo-data:/var/tempo
      - ./otel/grafana/tempo.yaml:/etc/tempo.yaml
    depends_on:
      - init
    networks:
      - observability

#  otel-collector:
#    image: otel/opentelemetry-collector:latest
#    command: [ "--config=/etc/otel-collector.yaml", "--feature-gates=-component.UseLocalHostAsDefaultHost" ]
#    volumes:
#      - ./otel/otel-collector.yaml:/etc/otel-collector.yaml
#    ports:
#      - "4317"
#      - "4318"
#    networks:
#      - observability
  alloy:
    image: grafana/alloy:latest
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:4317
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    volumes:
      - ./otel/grafana/config.alloy:/etc/alloy/config.alloy
    ports:
      - "12345:4317"
      - "9317:9317"
    networks:
      - observability
      - app
#  frontend:
#    image: djajcevic/cool-app-frontend:latest
#    ports:
#      - 8081:8080
#  frontend:
#    build:
#      context: react-demo
#      dockerfile: Dockerfile.dev
#    command: npm start
#    env_file:
#      - ./react-demo/.env
#    working_dir: /app
#    develop:
#      watch:
#        - action: sync
#          path: ./react-demo
#          target: /
#          ignore:
#            - node_modules/
#        - action: rebuild
#          path: package.json
#    ports:
#      - 3000:3000
volumes:
  grafana-data:
  tempo-data:

networks:
  observability:
  app: